{"code":"import { __awaiter } from \"tslib\";\r\nimport { BuiltInModule } from './builtin/built-in.module';\r\nimport { Injector, ValueProvider } from './di';\r\nimport { FinishProcess, LocalFinishProcess, LsError } from './error';\r\nimport { find_usage } from './fm-module';\r\nimport { ApiParams, Authenticator, CacheProxy, FmKoa, FmServer, LifeCycle, PURE_PARAMS, SessionContext, SessionData } from './server';\r\nimport { FM_DI_TOKEN, TokenUtils } from './token';\r\nexport class Platform {\r\n    constructor() {\r\n        var _a;\r\n        this.modules = {};\r\n        this.root_injector = Injector.create();\r\n        this._server = new FmServer();\r\n        this._koa = new FmKoa({ cors: true, body_parser: true });\r\n        this.started_at = new Date().getTime();\r\n        this._server.on('GET', '/health-check', () => '');\r\n        this.root_injector.set_provider(Authenticator, new ValueProvider('Authenticator', null));\r\n        this.root_injector.set_provider(CacheProxy, new ValueProvider('CacheProxy', null));\r\n        this.root_injector.set_provider(LifeCycle, new ValueProvider('LifeCycle', null));\r\n        (_a = Reflect.getMetadata(FM_DI_TOKEN.module_provider_collector, BuiltInModule)) === null || _a === void 0 ? void 0 : _a(this.root_injector);\r\n    }\r\n    loading_message(env, port) {\r\n        console.log(`fm-ts-backend starting...`);\r\n        console.log(`    using environment ${env}...`);\r\n        console.log(`    listen at port ${port}...`);\r\n        return this;\r\n    }\r\n    register_module(name, module) {\r\n        this.modules[name] = module;\r\n        return this;\r\n    }\r\n    select_module(keys) {\r\n        console.log('selected servers:', keys);\r\n        keys.map(k => this.modules[k])\r\n            .filter(m => m)\r\n            .forEach(m => this.bootstrap(m));\r\n        return this;\r\n    }\r\n    bootstrap(root_module) {\r\n        var _a, _b, _c, _d, _e, _f;\r\n        TokenUtils.ensureClassType(root_module, 'fm_module');\r\n        const sub_injector = Injector.create(this.root_injector);\r\n        const provider_tree = (_a = Reflect.getMetadata(FM_DI_TOKEN.module_provider_collector, root_module)) === null || _a === void 0 ? void 0 : _a(sub_injector);\r\n        (_b = sub_injector.get(Authenticator)) === null || _b === void 0 ? void 0 : _b.set_used();\r\n        (_c = sub_injector.get(LifeCycle)) === null || _c === void 0 ? void 0 : _c.set_used();\r\n        (_d = sub_injector.get(CacheProxy)) === null || _d === void 0 ? void 0 : _d.set_used();\r\n        const router_module = Reflect.getMetadata(FM_DI_TOKEN.module_router_gate, root_module);\r\n        (_f = (_e = Reflect.getMetadata(FM_DI_TOKEN.router_handler_collector, router_module)) === null || _e === void 0 ? void 0 : _e(sub_injector)) === null || _f === void 0 ? void 0 : _f.forEach((desc) => {\r\n            if (!desc.disabled) {\r\n                const provider_list = this.get_providers(desc, sub_injector, [ApiParams, SessionContext, SessionData, PURE_PARAMS]);\r\n                provider_list.forEach(p => { var _a; return (_a = p.create) === null || _a === void 0 ? void 0 : _a.call(p); });\r\n                desc.methods.forEach(m => this._server.on(m, '/' + desc.path, PlatformStatic.makeHandler(sub_injector, desc, provider_list)));\r\n            }\r\n        });\r\n        provider_tree.children.filter(def => !find_usage(def))\r\n            .forEach(def => {\r\n            console.log(`Warning: ${root_module.name} -> ${def.name} not used.`);\r\n        });\r\n        return this;\r\n    }\r\n    koa_use(middleware) {\r\n        this._koa.use(middleware);\r\n        return this;\r\n    }\r\n    show_api_list() {\r\n        const handler_list = this._server.get_handler_list();\r\n        console.log('\\nUsable API list:');\r\n        for (const desc of handler_list) {\r\n            console.log(`    ${desc.method.padEnd(7)}`, desc.path);\r\n        }\r\n        return this;\r\n    }\r\n    start(port) {\r\n        this._koa.handle_by(this._server)\r\n            .listen(port, () => {\r\n            const duration = new Date().getTime() - this.started_at;\r\n            console.log(`\\nfm-ts-backend started successfully in ${duration / 1000}s.`);\r\n        });\r\n    }\r\n    get_providers(desc, injector, except_list) {\r\n        var _a, _b;\r\n        return (_b = (_a = desc.param_types) === null || _a === void 0 ? void 0 : _a.map((token, i) => {\r\n            var _a;\r\n            if (token === undefined) {\r\n                throw new Error(`type 'undefined' at ${desc.pos}[${i}], if it's not specified, there maybe a circular import.`);\r\n            }\r\n            if ((except_list === null || except_list === void 0 ? void 0 : except_list.includes(token)) || ((_a = desc.inject_except_list) === null || _a === void 0 ? void 0 : _a.includes(token))) {\r\n                return token;\r\n            }\r\n            else {\r\n                const provider = injector.get(token, desc.pos);\r\n                if (provider) {\r\n                    return provider;\r\n                }\r\n            }\r\n            throw new Error(`Can't find provider of \"${token}\" in [${desc.pos}, args[${i}]]`);\r\n        })) !== null && _b !== void 0 ? _b : [];\r\n    }\r\n}\r\nvar PlatformStatic;\r\n(function (PlatformStatic) {\r\n    function finish_process(ctx, r) {\r\n        ctx.response.body = r;\r\n    }\r\n    PlatformStatic.finish_process = finish_process;\r\n    function deal_wrapper(wrap, res) {\r\n        if (wrap) {\r\n            if (Array.isArray(res)) {\r\n                return { data: { results: res } };\r\n            }\r\n            else {\r\n                return { data: res };\r\n            }\r\n        }\r\n        else {\r\n            return res;\r\n        }\r\n    }\r\n    PlatformStatic.deal_wrapper = deal_wrapper;\r\n    function run_handler(cs, handler_wrapper) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            try {\r\n                return yield (handler_wrapper === null || handler_wrapper === void 0 ? void 0 : handler_wrapper());\r\n            }\r\n            catch (reason) {\r\n                if (reason instanceof LocalFinishProcess) {\r\n                    return yield reason.body;\r\n                }\r\n                else if (reason instanceof FinishProcess) {\r\n                    return reason;\r\n                }\r\n                else {\r\n                    return new ErrorWrapper(reason);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    PlatformStatic.run_handler = run_handler;\r\n    function makeHandler(injector, desc, provider_list) {\r\n        return function (params, cs) {\r\n            var _a, _b, _c;\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                const cache = (_a = injector.get(CacheProxy)) === null || _a === void 0 ? void 0 : _a.create();\r\n                const hooks = (_b = injector.get(LifeCycle)) === null || _b === void 0 ? void 0 : _b.create();\r\n                const auth = (_c = injector.get(Authenticator)) === null || _c === void 0 ? void 0 : _c.create();\r\n                const data = new SessionData();\r\n                const context = new SessionContext(cs, auth, cache, desc.cache_prefix, desc.cache_expires);\r\n                yield (hooks === null || hooks === void 0 ? void 0 : hooks.on_init(context, data));\r\n                if (desc.auth) {\r\n                    if (!auth) {\r\n                        throw new Error(`no provider for <Authenticator>.`);\r\n                    }\r\n                    if ((yield context.do_auth()) === undefined) {\r\n                        finish_process(cs, { error: { code: 401, msg: 'Unauthorized.' } });\r\n                    }\r\n                }\r\n                const param_list = provider_list.map((provider) => {\r\n                    if (provider === undefined) {\r\n                        return undefined;\r\n                    }\r\n                    else if (provider === PURE_PARAMS) {\r\n                        return params;\r\n                    }\r\n                    else if (provider === ApiParams) {\r\n                        return new ApiParams(params);\r\n                    }\r\n                    else if (provider === SessionContext) {\r\n                        return context;\r\n                    }\r\n                    else if (provider === SessionData) {\r\n                        return data;\r\n                    }\r\n                    else {\r\n                        return provider.create();\r\n                    }\r\n                });\r\n                const res = yield run_handler(cs, () => desc.handler(...param_list));\r\n                if (res instanceof ErrorWrapper) {\r\n                    yield (hooks === null || hooks === void 0 ? void 0 : hooks.on_error(context, data, res.err));\r\n                    finish_process(cs, { error: res.err_data });\r\n                }\r\n                else if (res instanceof FinishProcess) {\r\n                    yield (hooks === null || hooks === void 0 ? void 0 : hooks.on_finish(context, data));\r\n                    finish_process(cs, res.body);\r\n                }\r\n                else {\r\n                    yield (hooks === null || hooks === void 0 ? void 0 : hooks.on_finish(context, data));\r\n                    finish_process(cs, deal_wrapper(desc.wrap_result, res));\r\n                }\r\n            });\r\n        };\r\n    }\r\n    PlatformStatic.makeHandler = makeHandler;\r\n})(PlatformStatic || (PlatformStatic = {}));\r\nclass ErrorWrapper {\r\n    constructor(err) {\r\n        this.err = err;\r\n        if (err instanceof LsError) {\r\n            this.err_data = err.toJson();\r\n        }\r\n        else if (err instanceof Error) {\r\n            this.err_data = { msg: err.message + '\\n' + err.stack };\r\n        }\r\n        else if (err instanceof String) {\r\n            this.err_data = { msg: err.toString() };\r\n        }\r\n        else if (typeof err === 'string') {\r\n            this.err_data = { msg: err };\r\n        }\r\n        else {\r\n            this.err_data = err;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=platform.js.map","references":["/Users/caojiahang/代码/tora/src/builtin/built-in.module.ts","/Users/caojiahang/代码/tora/src/di/index.ts","/Users/caojiahang/代码/tora/src/error.ts","/Users/caojiahang/代码/tora/src/fm-module.ts","/Users/caojiahang/代码/tora/src/server/index.ts","/Users/caojiahang/代码/tora/src/token.ts","/Users/caojiahang/代码/tora/src/type.ts"],"map":"{\"version\":3,\"file\":\"platform.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/platform.ts\"],\"names\":[],\"mappings\":\"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\"}"}
