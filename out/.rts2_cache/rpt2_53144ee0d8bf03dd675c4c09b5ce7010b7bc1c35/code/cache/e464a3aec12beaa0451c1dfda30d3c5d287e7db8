{"code":"export var FM_DI_TOKEN;\r\n(function (FM_DI_TOKEN) {\r\n    FM_DI_TOKEN[\"component\"] = \"lazor:component\";\r\n    FM_DI_TOKEN[\"cls_type\"] = \"lazor:class-type\";\r\n    FM_DI_TOKEN[\"custom_data\"] = \"lazor:custom-data\";\r\n    FM_DI_TOKEN[\"instance\"] = \"lazor:instance\";\r\n    FM_DI_TOKEN[\"module_provider_collector\"] = \"lazor:module-provider-collector\";\r\n    FM_DI_TOKEN[\"module_router_gate\"] = \"lazor:module-router-gate\";\r\n    FM_DI_TOKEN[\"param_injection\"] = \"lazor:param-injection\";\r\n    FM_DI_TOKEN[\"request_handler\"] = \"lazor:request-handler\";\r\n    FM_DI_TOKEN[\"router_handler_collector\"] = \"lazor:router-handler-collector\";\r\n    FM_DI_TOKEN[\"router_handlers\"] = \"lazor:router-handlers\";\r\n    FM_DI_TOKEN[\"router_options\"] = \"lazor:router-options\";\r\n    FM_DI_TOKEN[\"router_meta\"] = \"lazor:router-meta\";\r\n})(FM_DI_TOKEN || (FM_DI_TOKEN = {}));\r\nexport var FM_CLS_TYPE;\r\n(function (FM_CLS_TYPE) {\r\n    FM_CLS_TYPE[\"fm_module\"] = \"module\";\r\n    FM_CLS_TYPE[\"fm_router\"] = \"fm-router\";\r\n})(FM_CLS_TYPE || (FM_CLS_TYPE = {}));\r\nexport var TokenUtils;\r\n(function (TokenUtils) {\r\n    function setClassType(target, type) {\r\n        if (Reflect.getMetadata(FM_DI_TOKEN.cls_type, target)) {\r\n            throw new Error();\r\n        }\r\n        Reflect.defineMetadata(FM_DI_TOKEN.cls_type, type2token(type), target);\r\n    }\r\n    TokenUtils.setClassType = setClassType;\r\n    function ensureClassType(target, type) {\r\n        if (Reflect.getMetadata(FM_DI_TOKEN.cls_type, target) !== type2token(type)) {\r\n            throw new Error(`${target.name} is not FmModule.`);\r\n        }\r\n    }\r\n    TokenUtils.ensureClassType = ensureClassType;\r\n    function type2token(type) {\r\n        if (type === 'fm_router') {\r\n            return FM_CLS_TYPE.fm_router;\r\n        }\r\n        else if (type === 'fm_module') {\r\n            return FM_CLS_TYPE.fm_module;\r\n        }\r\n        else {\r\n            throw new Error(`unknown class type ${type}`);\r\n        }\r\n    }\r\n})(TokenUtils || (TokenUtils = {}));\r\n//# sourceMappingURL=token.js.map","references":["/Users/caojiahang/代码/tora/src/type.ts"],"map":"{\"version\":3,\"file\":\"token.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/token.ts\"],\"names\":[],\"mappings\":\"AAEA,MAAM,CAAN,IAAY,WAeX;AAfD,WAAY,WAAW;IACnB,4CAA6B,CAAA;IAC7B,4CAA6B,CAAA;IAE7B,gDAAiC,CAAA;IAEjC,0CAA2B,CAAA;IAC3B,4EAA6D,CAAA;IAC7D,8DAA+C,CAAA;IAC/C,wDAAyC,CAAA;IACzC,wDAAyC,CAAA;IACzC,0EAA2D,CAAA;IAC3D,wDAAyC,CAAA;IACzC,sDAAuC,CAAA;IACvC,gDAAiC,CAAA;AACrC,CAAC,EAfW,WAAW,KAAX,WAAW,QAetB;AAED,MAAM,CAAN,IAAY,WAGX;AAHD,WAAY,WAAW;IACnB,mCAAoB,CAAA;IACpB,sCAAuB,CAAA;AAC3B,CAAC,EAHW,WAAW,KAAX,WAAW,QAGtB;AAED,MAAM,KAAW,UAAU,CAwB1B;AAxBD,WAAiB,UAAU;IAEvB,SAAgB,YAAY,CAAC,MAAW,EAAE,IAAe;QACrD,IAAI,OAAO,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnD,MAAM,IAAI,KAAK,EAAE,CAAA;SACpB;QACD,OAAO,CAAC,cAAc,CAAC,WAAW,CAAC,QAAQ,EAAE,UAAU,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,CAAA;IAC1E,CAAC;IALe,uBAAY,eAK3B,CAAA;IAED,SAAgB,eAAe,CAAC,MAAW,EAAE,IAAe;QACxD,IAAI,OAAO,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,MAAM,CAAC,KAAK,UAAU,CAAC,IAAI,CAAC,EAAE;YACxE,MAAM,IAAI,KAAK,CAAC,GAAG,MAAM,CAAC,IAAI,mBAAmB,CAAC,CAAA;SACrD;IACL,CAAC;IAJe,0BAAe,kBAI9B,CAAA;IAED,SAAS,UAAU,CAAC,IAAe;QAC/B,IAAI,IAAI,KAAK,WAAW,EAAE;YACtB,OAAO,WAAW,CAAC,SAAS,CAAA;SAC/B;aAAM,IAAI,IAAI,KAAK,WAAW,EAAE;YAC7B,OAAO,WAAW,CAAC,SAAS,CAAA;SAC/B;aAAM;YACH,MAAM,IAAI,KAAK,CAAC,sBAAsB,IAAI,EAAE,CAAC,CAAA;SAChD;IACL,CAAC;AACL,CAAC,EAxBgB,UAAU,KAAV,UAAU,QAwB1B\"}"}
